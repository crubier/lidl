

interaction (bob):{theNumber:Number in,theResult:Number out} is
(
  ({
theNumber:(variable x)
theResult:(variable y)
})
with behaviour
(get(variable y) from previous and set (variable x) for next)
)





interaction (bob):{theNumber:Number in,theOther:Number in,theResult:Number out,theLast:Number out} is
  (
  ({theNumber:(variable theNumber)
theOther:(variable y)
theResult:(variable theResult)
theLast:(variable wow)})
with behaviour
(apply
(function cool)
to
({0:(variable theNumber)1:(variable y)})
and get
({sum:(variable theResult)diff:(variable wow)})
))
