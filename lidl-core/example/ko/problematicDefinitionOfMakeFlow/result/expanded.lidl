(
    ({
      theNumber:(variable new (variable theNumber))
      theResult:(variable theNumber)
    })
    with behaviour
    ( (variable theNumber)  =   (
      (variable result of if (
      (variable  (variable new (variable theNumber)) is active)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get (variable  (variable new (variable theNumber)) is active) )
    ) then (variable new (variable theNumber)) else (
      (variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))
      with behaviour
      (
      (variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    )  source:(variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))   })
        and get
        ({a:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) b:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))})
      )
    )
    ))
      with behaviour
      (
      (variable activation of when (
      (variable  (variable new (variable theNumber)) is active)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get (variable  (variable new (variable theNumber)) is active) )
    ) then ((variable result of if (
      (variable  (variable new (variable theNumber)) is active)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get (variable  (variable new (variable theNumber)) is active) )
    ) then (variable new (variable theNumber)) else (
      (variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))
      with behaviour
      (
      (variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    )  source:(variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))   })
        and get
        ({a:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) b:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))})
      )
    )
    )) = (variable new (variable theNumber))) else ((variable result of if (
      (variable  (variable new (variable theNumber)) is active)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get (variable  (variable new (variable theNumber)) is active) )
    ) then (variable new (variable theNumber)) else (
      (variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))
      with behaviour
      (
      (variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    )  source:(variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))   })
        and get
        ({a:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) b:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))})
      )
    )
    )) = (
      (variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))
      with behaviour
      (
      (variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    )  source:(variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))   })
        and get
        ({a:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) b:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))})
      )
    )
    )))
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (variable  (variable new (variable theNumber)) is active)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get (variable  (variable new (variable theNumber)) is active) )
    )  source:(variable activation of when (
      (variable  (variable new (variable theNumber)) is active)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get (variable  (variable new (variable theNumber)) is active) )
    ) then ((variable result of if (
      (variable  (variable new (variable theNumber)) is active)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get (variable  (variable new (variable theNumber)) is active) )
    ) then (variable new (variable theNumber)) else (
      (variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))
      with behaviour
      (
      (variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    )  source:(variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))   })
        and get
        ({a:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) b:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))})
      )
    )
    )) = (variable new (variable theNumber))) else ((variable result of if (
      (variable  (variable new (variable theNumber)) is active)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get (variable  (variable new (variable theNumber)) is active) )
    ) then (variable new (variable theNumber)) else (
      (variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))
      with behaviour
      (
      (variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    )  source:(variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))   })
        and get
        ({a:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) b:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))})
      )
    )
    )) = (
      (variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))
      with behaviour
      (
      (variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    )  source:(variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))   })
        and get
        ({a:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) b:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))})
      )
    )
    )))   })
        and get
        ({a:((variable result of if (
      (variable  (variable new (variable theNumber)) is active)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get (variable  (variable new (variable theNumber)) is active) )
    ) then (variable new (variable theNumber)) else (
      (variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))
      with behaviour
      (
      (variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    )  source:(variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))   })
        and get
        ({a:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) b:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))})
      )
    )
    )) = (variable new (variable theNumber))) b:((variable result of if (
      (variable  (variable new (variable theNumber)) is active)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get (variable  (variable new (variable theNumber)) is active) )
    ) then (variable new (variable theNumber)) else (
      (variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))
      with behaviour
      (
      (variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    )  source:(variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))   })
        and get
        ({a:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) b:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))})
      )
    )
    )) = (
      (variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))
      with behaviour
      (
      (variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    )  source:(variable activation of when (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) else ((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )))   })
        and get
        ({a:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (1)) b:((variable result of if (
      (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ))
      with behaviour
      (apply (function boolNot) to (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    ) and get (variable not (
      (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active)
      with behaviour
      (apply (function isActive) to (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) and get (variable  (
      (variable previous(1))
      with behaviour
      (get(variable previous(1))from previous and set (1) for next)
    ) is active) )
    )) )
    ) then (1) else (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    )) = (
      (variable previous(variable theNumber))
      with behaviour
      (get(variable previous(variable theNumber))from previous and set (variable theNumber) for next)
    ))})
      )
    )
    ))})
      )
    )
    ) )
  )