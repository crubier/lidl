(
    ({
      theNumber:(variable new (variable theNumber))
      theResult:(variable theNumber)
    })
    with behaviour
    ( (variable theNumber)  =   (
      ( result of if (
      ((variable new (variable theNumber)) is active!)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get ((variable new (variable theNumber)) is active?) )
    ) then (variable new (variable theNumber)) else (
      ( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) !)
      with behaviour
      (
      (activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) ?)
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    )  source:(activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) !)   })
        and get
        ({a:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) b:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ))})
      )
    )
    ) !)
      with behaviour
      (
      (activation of when (
      ((variable new (variable theNumber)) is active!)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get ((variable new (variable theNumber)) is active?) )
    ) then (( result of if (
      ((variable new (variable theNumber)) is active!)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get ((variable new (variable theNumber)) is active?) )
    ) then (variable new (variable theNumber)) else (
      ( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) !)
      with behaviour
      (
      (activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) ?)
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    )  source:(activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) !)   })
        and get
        ({a:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) b:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ))})
      )
    )
    ) ?) = (variable new (variable theNumber))) else (( result of if (
      ((variable new (variable theNumber)) is active!)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get ((variable new (variable theNumber)) is active?) )
    ) then (variable new (variable theNumber)) else (
      ( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) !)
      with behaviour
      (
      (activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) ?)
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    )  source:(activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) !)   })
        and get
        ({a:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) b:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ))})
      )
    )
    ) ?) = (
      ( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) !)
      with behaviour
      (
      (activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) ?)
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    )  source:(activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) !)   })
        and get
        ({a:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) b:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ))})
      )
    )
    )) ?)
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      ((variable new (variable theNumber)) is active!)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get ((variable new (variable theNumber)) is active?) )
    )  source:(activation of when (
      ((variable new (variable theNumber)) is active!)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get ((variable new (variable theNumber)) is active?) )
    ) then (( result of if (
      ((variable new (variable theNumber)) is active!)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get ((variable new (variable theNumber)) is active?) )
    ) then (variable new (variable theNumber)) else (
      ( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) !)
      with behaviour
      (
      (activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) ?)
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    )  source:(activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) !)   })
        and get
        ({a:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) b:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ))})
      )
    )
    ) ?) = (variable new (variable theNumber))) else (( result of if (
      ((variable new (variable theNumber)) is active!)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get ((variable new (variable theNumber)) is active?) )
    ) then (variable new (variable theNumber)) else (
      ( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) !)
      with behaviour
      (
      (activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) ?)
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    )  source:(activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) !)   })
        and get
        ({a:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) b:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ))})
      )
    )
    ) ?) = (
      ( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) !)
      with behaviour
      (
      (activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) ?)
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    )  source:(activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) !)   })
        and get
        ({a:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) b:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ))})
      )
    )
    )) !)   })
        and get
        ({a:(( result of if (
      ((variable new (variable theNumber)) is active!)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get ((variable new (variable theNumber)) is active?) )
    ) then (variable new (variable theNumber)) else (
      ( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) !)
      with behaviour
      (
      (activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) ?)
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    )  source:(activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) !)   })
        and get
        ({a:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) b:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ))})
      )
    )
    ) ?) = (variable new (variable theNumber))) b:(( result of if (
      ((variable new (variable theNumber)) is active!)
      with behaviour
      (apply (function isActive) to (variable new (variable theNumber)) and get ((variable new (variable theNumber)) is active?) )
    ) then (variable new (variable theNumber)) else (
      ( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) !)
      with behaviour
      (
      (activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) ?)
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    )  source:(activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) !)   })
        and get
        ({a:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) b:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ))})
      )
    )
    ) ?) = (
      ( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) !)
      with behaviour
      (
      (activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) ?)
      with behaviour
      (
        apply
        (function whenThenElse)
        to
        ({  cond:(
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    )  source:(activation of when (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) else (( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    )) !)   })
        and get
        ({a:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (1)) b:(( result of if (
      (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )!)
      with behaviour
      ((function boolNot)  (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    ) = (not (
      ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active!)
      with behaviour
      (apply (function isActive) to (
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) and get ((
      (previous(1)!)
      with behaviour
      ((previous(1)?)= previous (1))
    ) is active?) )
    )?) )
    ) then (1) else (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ) ?) = (
      (previous(variable theNumber)!)
      with behaviour
      ((previous(variable theNumber)?)= previous (variable theNumber))
    ))})
      )
    )
    ))})
      )
    )
    ) )
  )